#include <iostream>

using namespace std;

int n, m;
int map[503][503];

const char block[19][4][5] =
{
	// 1
	{
		"1111",
		"0000",
		"0000",
		"0000",
	},
	{
		"1000",
		"1000",
		"1000",
		"1000",
	},
	// ㅁ
	{
		"1100",
		"1100",
		"0000",
		"0000",
	},
	// ㄴ
	// 회전
	{
		"1000",
		"1000",
		"1100",
		"0000",
	},
	{
		"0010",
		"1110",
		"0000",
		"0000",
	},
	{
		"1100",
		"0100",
		"0100",
		"0000",
	},
	{
		"1110",
		"1000",
		"0000",
		"0000",
	},
	// 대칭
	{
		"0100",
		"0100",
		"1100",
		"0000",
	},
	{
		"1000",
		"1110",
		"0000",
		"0000",
	},
	{
		"1100",
		"1000",
		"1000",
		"0000",
	},
	{
		"1110",
		"0010",
		"0000",
		"0000",
	},
	// ㄹ
	// 회전
	{
		"1100",
		"0110",
		"0000",
		"0000",
	},
	{
		"0100",
		"1100",
		"1000",
		"0000",
	},
	// 대칭
	{
		"0110",
		"1100",
		"0000",
		"0000",
	},
	{
		"1000",
		"1100",
		"0100",
		"0000",
	},
	// ㅜ
	// 회전
	{
		"1110",
		"0100",
		"0000",
		"0000",
	},
	{
		"1000",
		"1100",
		"1000",
		"0000",
	},
	{
		"0100",
		"1110",
		"0000",
		"0000",
	},
	{
		"0100",
		"1100",
		"0100",
		"0000",
	},
};

// 블록 * 맵하면 얻을수있는 점수가 나옵니다.
// example 
//"1111", * 0123
//"0000",   4567
//"0000",   8901
//"0000"    2345
// = 6

int GetScore(int sy, int sx, int k)
{
	int score = 0;
	for (int y = 0; y < 4; y++)
	{
		for (int x = 0; x < 4; x++)
		{
			score += (block[k][y][x] - '0') * map[sy + y][sx + x];
		}
	}
	return score;
}

int main()
{
	cin >> n >> m;

	// 맵 입력 받기
	for (int y = 0; y < n; y++)
	{
		for (int x = 0; x < m; x++)
		{
			cin >> map[y][x];
		}
	}

	int result = 0;

	// 미리 선언해둔 블록을 블록*맵 연산을 하는 GetScore메소드에 넘겨주면서 가장 높은 점수를 얻을수 있는 점수 찾기
	for (int y = 0; y < n; y++)
	{
		for (int x = 0; x < m; x++)
		{
			for (int k = 0; k < 19; k++)
			{
				int score = GetScore(y, x, k);
				if (result < score)
				{
					result = score;
				}
			}
		}
	}
	cout << result << endl;


	return 0;
}

